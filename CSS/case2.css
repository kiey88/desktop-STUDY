@charset "utf-8";
*{margin: 0; padding: 0;}

#wrapper{
    width: 800px;
    margin: 0 auto;
}
/* header content */
header{
    height: 400px;
    background-image: url(../image/premium_photo-1674939148088-d71acc1541ff.avif);
    background-size: cover;

}
nav{
    background-color: black;
    text-align: center;
    padding: 20px;
}
nav > a{
    text-decoration: none;
    color: #fff;
    padding: 20px;
    /* display: inline-block; */
}
    nav > a:hover{
        background-color:  #666;
}
    /* '>' 기호는 CSS에서 자식 선택자(child selector)라고 불립니다.

    자식 선택자는 특정 요소의 직접적인 자식 요소들을 선택할 때 사용됩니다. 이는 해당 요소의 바로 한 단계 아래에 있는 요소들만 선택하게 됩니다.
    
    예를 들어, nav > a는 <nav> 요소의 바로 아래에 있는 <a> 요소들을 선택합니다. 즉, <nav> 요소의 자식인 <a> 요소들에 스타일을 적용하게 됩니다.
    
    마찬가지로, section > div는 <section> 요소의 바로 아래에 있는 모든 <div> 요소들을 선택합니다. */
    
    /* ':' 기호는 CSS에서 가상 클래스(pseudo-class)를 나타내는 기호입니다. 가상 클래스는 특정 상태나 위치에 있는 요소에 스타일을 적용할 때 사용됩니다.

    가상 클래스는 일반적으로 선택한 요소의 특정 상태를 나타내는데 사용되며, 예를 들어 :hover, :active, :focus 등이 있습니다. 이러한 가상 클래스는 마우스 오버, 클릭, 포커스 등과 같은 상호작용에 따라 요소의 스타일을 변경할 수 있게 해줍니다.
    
    또한, 가상 클래스는 특정 요소의 구조나 위치에 따라 스타일을 적용하는데도 사용됩니다. 예를 들어 :first-child, :last-child, :nth-child 등은 요소의 첫 번째 자식, 마지막 자식, 특정 순서에 있는 자식 요소를 선택하는데 사용됩니다.
    
    가상 클래스는 콜론(:)으로 시작하며, 선택한 요소의 상태나 위치에 따라 스타일을 지정할 수 있습니다. */

section > div{
    float: left;
    margin: 20px;
}
section{
    padding: 30px
}
section::after{
    content: "";
    display: block;
    clear: both;
}
/* '::' (두 개의 콜론) 기호는 CSS에서 가상 요소(pseudo-element)를 나타내는 기호입니다. 가상 요소는 문서의 특정 부분에 동적으로 생성된 요소에 스타일을 적용하는데 사용됩니다.

가상 요소는 ::before, ::after, ::first-line, ::first-letter 등과 같이 요소의 특정 부분에 스타일을 적용하기 위해 사용됩니다. 예를 들어, ::before 가상 요소는 선택한 요소의 내용의 앞에 가상으로 요소를 생성하여 스타일을 적용할 수 있습니다.

일부 가상 요소는 이중 콜론 ::을 사용하고, 일부는 단일 콜론 :을 사용합니다. 예를 들어, ::before와 ::after는 이중 콜론을 사용하고, :first-line과 :first-letter는 단일 콜론을 사용합니다.

그러나 CSS3부터는 단일 콜론(:)을 사용한 가상 요소와도 호환성을 유지하기 위해 이중 콜론(::)을 사용한 가상 요소를 동일하게 처리합니다. 따라서 가상 요소를 표현하는 데 사용되는 콜론 기호는 둘 다 올바르게 해석됩니다. */

/* ::after는 CSS의 가상 요소(pseudo-element) 중 하나입니다. 이 가상 요소는 선택한 요소의 마지막 자식 요소의 후에 생성된 가상 요소를 나타냅니다.

::after 가상 요소는 선택한 요소의 내용(content) 뒤에 콘텐츠를 추가하고 스타일을 적용하는 데 사용됩니다. 이를 통해 요소에 동적인 시각적 효과를 부여하거나 추가적인 장식 요소를 생성할 수 있습니다.

::after 가상 요소는 content 속성을 사용하여 생성된 콘텐츠를 정의합니다. 이 콘텐츠는 텍스트, 이미지, 아이콘 또는 다른 CSS 스타일링 요소일 수 있습니다. 또한, 가상 요소에는 display 속성을 통해 생성된 콘텐츠의 표시 방법을 지정할 수도 있습니다.

예를 들어, 아래의 CSS 코드는 <div> 요소의 내용(content) 뒤에 콘텐츠를 추가하고 가상 요소인 ::after를 사용하여 스타일을 적용하는 예입니다 */
section > div{
    float: left;
    margin: 20px;
}
section > h1{
    margin: 10px 0;
}
section > div.img{
    width: 300px;
    height: 200px;
}
section#info > div.img{
    background-image: url(../image/coffee_3_cups.avif);
    background-size: cover;
}
section#navi > div.img{
    background-image: url(../image/map.avif);
    background-size: cover;
}

p{
    padding: 10px
}

ol{
    padding: 10px;
    width: 50%;
    /* float: left; */
}
li{
    padding: 5px;
}
section#choice > div.img{
    background-image: url(../image/coffee\ man\ woman.avif);
    background-size: cover;
    position: relative;
    float: right;
    bottom: 210px;
    border-radius: 45%;
}
footer{
    text-align: center;
    background-color: black;
    color: #fbfbfb;
}
a.home{
    position: fixed;
    right: 10px;
    bottom: 10px;
    text-decoration: none;
    /* display: inline-block; 포지션을 픽시드로 하면 자동으로 인라인형 태그가 블럭형으로 바뀐다*/
    width: 100px;
    height: 100px;
    background-color: rgb(232, 15, 127);
    color: #fbfbfb;
    text-align: center;
    line-height: 100px;
    /* CSS의 line-height 속성은 텍스트 줄의 높이를 조정하는 데 사용됩니다. 이 속성은 텍스트의 줄 간격을 결정하며, 픽셀(px), 상대적 크기(em, rem) 또는 비율(%, number)로 지정할 수 있습니다.

    line-height: 100px;는 줄 간격을 100픽셀로 설정하는 것을 의미합니다. 이는 텍스트 줄의 높이가 100픽셀로 설정되며, 텍스트가 세로로 중앙 정렬되는 효과를 줄 수 있습니다.

    줄 간격을 지정하는 것은 텍스트의 가독성과 레이아웃에 영향을 줄 수 있습니다. 특히 텍스트 블록 내에서 여러 줄이 있는 경우, line-height 속성은 줄 사이의 간격을 조정하여 텍스트가 더 읽기 쉽고 조화로운 모습을 갖도록 도와줍니다. */
    border-radius: 100%;
}